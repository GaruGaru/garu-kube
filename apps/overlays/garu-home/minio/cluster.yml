---
apiVersion: minio.min.io/v2
kind: Tenant
metadata:
  name: minio
  namespace: minio
  labels:
    app: minio
  annotations:
    prometheus.io/path: /minio/v2/metrics/cluster
    prometheus.io/port: "9000"
    prometheus.io/scrape: "true"

spec:
  credsSecret:
    name: garu-creds-secret
  ## Enable S3 specific features such as Bucket DNS which would allow `buckets` to be
  ## accessible as DNS entries of form `<bucketname>.minio.namespace.svc.cluster.local`
  s3:
    bucketDNS: false
  users:
    - name: storage-user
  image: minio/minio:RELEASE.2021-11-03T03-36-36Z
  imagePullSecret: { }
  pools:
    ## Servers specifies the number of MinIO Tenant Pods / Servers in this pool.
    ## For standalone mode, supply 1. For distributed mode, supply 4 or more.
    ## Note that the operator does not support upgrading from standalone to distributed mode.
    - servers: 1
      volumesPerServer: 4
      nodeSelector:
        "garu.io/storage-type": "ssd"
      resources: { }

      volumeClaimTemplate:
        apiVersion: v1
        kind: persistentvolumeclaims
        metadata: { }
        spec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 10Gi
          storageClassName: local-path
  ## Enable automatic Kubernetes based certificate generation and signing as explained in
  ## https://kubernetes.io/docs/tasks/tls/managing-tls-in-a-cluster
  requestAutoCert: false
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: minio
  namespace: minio
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    kubernetes.io/ingress.class: "nginx"
    #nginx.ingress.kubernetes.io/ssl-passthrough: "true"
    #nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"

spec:
  rules:
    - host: s3.garu.io
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: minio
                port:
                  number: 80
  tls:
    - hosts:
        - s3.garu.io
      secretName: minio-s3-cluster-tls
---
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: minio-ui
  namespace: minio
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    kubernetes.io/ingress.class: "nginx"
    #nginx.ingress.kubernetes.io/ssl-passthrough: "true"
    #nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"

spec:
  rules:
    - host: minio.garu.io
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: minio-hl
                port:
                  number: 9000
  tls:
    - hosts:
        - minio.garu.io
      secretName: minio-minio-cluster-tls
---
